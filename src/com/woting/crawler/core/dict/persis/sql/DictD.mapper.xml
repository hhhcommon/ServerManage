<?xml version="1.0" encoding="UTF-8" ?>

<!-- Etl与资源对应关系 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="A_DICTD">
  <!-- 对应关系 -->
  <resultMap id="BaseResultMap" type="dictd">
    <id      column="id"             property="id"             jdbcType="VARCHAR"/>
    <result  column="sourceId"       property="sourceId"       jdbcType="VARCHAR"/>
    <result  column="mId"            property="mId"            jdbcType="VARCHAR"/>
    <result  column="pId"            property="pId"            jdbcType="VARCHAR"/>
    <result  column="publisher"      property="publisher"      jdbcType="VARCHAR"/>
    <result  column="ddName"         property="ddName"         jdbcType="VARCHAR"/>
    <result  column="nPy"            property="nPy"            jdbcType="VARCHAR"/>
    <result  column="aliasName"      property="aliasName"      jdbcType="VARCHAR"/>
    <result  column="anPy"           property="anPy"           jdbcType="VARCHAR"/>
    <result  column="visitUrl"       property="visitUrl"       jdbcType="VARCHAR"/>
    <result  column="descn"          property="descn"          jdbcType="VARCHAR"/>
    <result  column="isValidate"     property="isValidate"     jdbcType="INTEGER"/>
    <result  column="schemeId"       property="schemeId"       jdbcType="VARCHAR"/>
    <result  column="schemeName"     property="schemeName"     jdbcType="VARCHAR"/>
    <result  column="cTime"          property="cTime"          jdbcType="TIMESTAMP"/>
  </resultMap>

  <!-- 所有列 -->
  <sql id="Base_Column_List">
    id, sourceId, mId, pId, publisher, ddName, nPy, aliasName, anPy, visitUrl, descn, isValidate, schemeId, schemeName, cTime
  </sql>

  <insert id="insertList" parameterType="java.util.Map">
    insert into hotspot_DictD(id, sourceId, mId, pId, publisher, ddName, nPy, aliasName, anPy, visitUrl, descn, isValidate, schemeId, schemeName, cTime) values
    <foreach collection="list" item="list" index="index" separator=",">
     (#{list.id},#{list.sourceId},#{list.mId},#{list.pId},#{list.publisher},#{list.ddName},#{list.nPy},#{list.aliasName},#{list.anPy},#{list.visitUrl},#{list.descn},#{list.isValidate},#{list.schemeId},#{list.schemeName},#{list.cTime})
    </foreach>
  </insert>
  
  <select id="getDictdValidNum" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from hotspot_DictD where isValidate='1' and publisher=#{publisher,jdbcType=VARCHAR}
  </select>
  
  <select id="getListByPub" resultMap="BaseResultMap" parameterType="java.util.Map">
    select <include refid="Base_Column_List"/> from hotspot_DictD where publisher=#{publisher,jdbcType=VARCHAR}
  </select>
  
  <select id="getListByMid" resultMap="BaseResultMap" parameterType="java.lang.String">
    select <include refid="Base_Column_List"/> from hotspot_DictD where mId=#{mId,jdbcType=VARCHAR} and pId = '0'
  </select>
  
  <select id="getDictDInfo" resultMap="BaseResultMap" parameterType="java.util.Map">
    select <include refid="Base_Column_List"/> from hotspot_DictD where ddName=#{ddName,jdbcType=VARCHAR} and publisher=#{publisher,jdbcType=VARCHAR} and pId=#{pId,jdbcType=VARCHAR} and isValidate=1
  </select>
  
  <select id="getMaxIsValidate" resultMap="BaseResultMap" parameterType="java.lang.String">
    select <include refid="Base_Column_List"/> from hotspot_DictD where publisher=#{publisher,jdbcType=VARCHAR} order by isValidate desc limit 1
  </select>
</mapper>