<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">
  <!--读取数据库配置信息 -->
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list merge="default">
        <value>/conf/database.properties</value>
      </list>
    </property>
  </bean>

  <!--[BEGIN]本机数据库：抓取源数据存储-->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" lazy-init="false">
    <property name="driverClassName" value="${local.mysql.driverClassName}"/>
    <property name="url" value="${local.mysql.url}"/>
    <property name="username" value="${local.mysql.username}"/>
    <property name="password" value="${local.mysql.password}"/>
    <property name="initialSize" value="30"/>
    <property name="maxActive" value="50"/>
    <property name="maxWait" value="600000"/>
    <property name="poolPreparedStatements" value="true"/>
    <property name="maxOpenPreparedStatements" value="30"/>
    <property name="testOnBorrow"><value>false</value></property>
    <property name="validationQuery"><value>select 1 from dual</value></property>
  </bean>
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  <bean id="sqlSessionFactory" class="com.spiritdata.framework.ext.spring.mybatis.MySqlSessionFactoryBean">
    <property name="configLocations">
      <list merge="default">
        <value>classpath*:mybatisConfig/frameworkMybatis.xml</value>
        <value>classpath*:mybatisConfig/*.mappers.cfg.xml</value>
      </list>
    </property>
    <property name="databaseType" value="MySql"/>
    <property name="dataSource" ref="dataSource"/>
    <property name="transactionFactory">
      <bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" />
    </property>
  </bean>
  <bean id="defaultDAO" class="com.spiritdata.framework.core.dao.mybatis.MybatisDAO"  scope="prototype" init-method="initialize">
    <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
  </bean>
  <!--[END]本机数据库：抓取源数据存储-->

  <!--[BEGIN]内容管理主数据库-->
  <bean id="dataSource_CM" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" lazy-init="false">
    <property name="driverClassName" value="${wtMain.mysql.driverClassName}"/>
    <property name="url" value="${wtMain.mysql.url}"/>
    <property name="username" value="${wtMain.mysql.username}"/>
    <property name="password" value="${wtMain.mysql.password}"/>
    <property name="initialSize" value="30"/>
    <property name="maxActive" value="50"/>
    <property name="maxWait" value="60000"/>
    <property name="poolPreparedStatements" value="true"/>
    <property name="maxOpenPreparedStatements" value="30"/>
    <property name="testOnBorrow"><value>false</value></property>
    <property name="validationQuery"><value>select 1 from dual</value></property>
  </bean>
  <bean id="transactionManager_CM" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource_CM"/>
  </bean>
  <bean id="sqlSessionFactory_CM" class="com.spiritdata.framework.ext.spring.mybatis.MySqlSessionFactoryBean">
    <property name="configLocations">
      <list merge="default">
        <value>classpath*:mybatisConfig/frameworkMybatis.xml</value>
        <value>classpath*:mybatisConfig/*.mappers.cfg.xml</value>
      </list>
    </property>
    <property name="databaseType" value="MySql"/>
    <property name="dataSource" ref="dataSource_CM"/>
    <property name="transactionFactory">
      <bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" />
    </property>
  </bean>
  <bean id="defaultDAO_CM" class="com.spiritdata.framework.core.dao.mybatis.MybatisDAO"  scope="prototype" init-method="initialize">
    <property name="sqlSessionFactory" ref="sqlSessionFactory_CM"/>
  </bean>
  <!--[END]本机数据库：抓取源数据存储-->
  
  <!-- Redis的配置 -->
  <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
    <property name="maxTotal" value="${redis.maxTotal}"/>
    <property name="maxIdle" value="${redis.maxIdle}"/>
    <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
    <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    <property name="testOnReturn" value="${redis.testOnReturn}"/>
  </bean>
  <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    <property name="hostName" value="${redis.host}"/>
    <property name="port" value="${redis.port}"/>
    <property name="password" value="${redis.password}"/>
    <property name="poolConfig" ref="poolConfig"/>
  </bean>
  
  <!-- 定时加载功能 -->
  <bean id="timer" class="com.woting.crawler.core.timer.persis.po.TimerPo" scope="prototype">
    <property name="CronExpression" value="${timer.CronExpression}"/>
    <property name="PlayCountCronExpression" value="${timer.PlayCountCronExpression}"/>
    <property name="CategoryCronExpression" value="${timer.CategoryCronExpression}"/>
  </bean>
  
  <!-- 定时加载功能 -->
  <bean id="scheme" class="com.woting.crawler.core.scheme.persis.po.SchemePo" scope="prototype">
    <property name="Schemenum" value="${scheme.Schemenum}"/>
    <property name="CrawlerExtent" value="${scheme.CrawlerExtent}"/>
  </bean>

  <!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->
  <context:component-scan base-package="com.woting.crawler" use-default-filters="false">
    <context:include-filter type="regex" expression=".*.*Service"/>
  </context:component-scan>
  <context:component-scan base-package="com.woting.cm" use-default-filters="false">
    <context:include-filter type="regex" expression=".*.*Service"/>
  </context:component-scan>
</beans>